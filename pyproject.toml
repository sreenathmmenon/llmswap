[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llmswap"
version = "5.0.2"
description = "Universal AI CLI & Python SDK: One interface for 8+ providers (OpenAI GPT-4o/o1 | Claude 3.5 | Gemini Pro | Cohere | Perplexity | IBM watsonx | Groq | Together AI). Features: Multi-provider chat (Claude Code/Gemini CLI alternative), code generation (GitHub Copilot alternative), Python SDK integration, single-line CLI queries, cost optimization, age-appropriate AI. Switch providers instantly."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Sreenath Menon", email = "zreenathmenon@gmail.com"},
]
keywords = [
    "llm",
    "ai", 
    "openai",
    "anthropic",
    "claude",
    "gemini",
    "watsonx",
    "ibm-watsonx",
    "ibm-watson",
    "watson-ai",
    "ollama",
    "groq",
    "groq-inference",
    "fast-inference",
    "github-copilot-alternative",
    "copilot-cli",
    "copilot-cli-alternative",
    "open-source-copilot",
    "copilot-alternative",
    "copilot-replacement",
    "code-generation",
    "natural-language-to-code",
    "command-generation",
    "ai-code-generation",
    "text-to-code",
    "bash-generator",
    "python-generator",
    "ai-code-assistant",
    "developer-ai-tools",
    "self-hosted-ai",
    "code-completion-api",
    "ai-pair-programming",
    "multi-llm-copilot",
    "gpt-4",
    "granite",
    "llama",
    "mistral",
    "llm-api",
    "langchain-alternative",
    "litellm-alternative",
    "multi-llm",
    "llm-switching",
    "provider-fallback",
    "cli",
    "ai-cli",
    "terminal-ai",
    "terminal-assistant",
    "command-line-ai",
    "shell-integration",
    "vim-integration",
    "vim-plugin",
    "editor-integration",
    "ai-chat",
    "ai-assistant",
    "cost-optimization",
    "response-caching",
    "code-review",
    "ai-code-review",
    "debugging",
    "ai-debugging",
    "log-analysis",
    "ai-logs",
    "token-tracking",
    "usage-analytics",
    "cost-analytics",
    "developer-tools",
    "hackathon",
    "hackathon-starter",
    "rag",
    "retrieval-augmented-generation",
    "vector-database",
    "embeddings",
    "chatgpt-alternative",
    "claude-code-alternative",
    "gemini-cli-alternative", 
    "openai-cli-alternative",
    "multi-provider-cli",
    "universal-ai-cli",
    "ai-provider-switcher",
    "provider-agnostic-cli",
    "llm-cli-interface",
    "ai-chat-cli",
    "terminal-ai-chat",
    "cli-ai-assistant",
    "multi-llm-cli",
    "cross-provider-cli",
    "perplexity",
    "cohere",
    "streamlit",
    "fastapi",
    "langchain",
    "pinecone",
    "chromadb",
    "llm-gateway",
    "enterprise-ai",
    "conversational-ai",
    "ai-teaching",
    "age-appropriate-ai",
    "personalized-ai",
    "ai-mentor",
    "multi-provider-chat",
    "provider-switching",
    "educational-ai",
    "ai-tutor",
    "teaching-assistant",
    "adaptive-learning",
    "conversational-cli",
    "multi-modal-ai",
    "ai-personas",
    "custom-ai-personas",
    "contextual-ai",
    "session-management",
    "ai-context-switching"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology", 
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Communications :: Chat",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: System :: Distributed Computing",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Typing :: Typed",
]
dependencies = [
    "anthropic>=0.3.0",
    "openai>=1.0.0",
    "google-generativeai>=0.3.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "ibm-watsonx-ai>=0.0.5",
    "httpx>=0.24.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "groq>=0.4.0",
    "cohere>=5.16.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.991",
]

[project.scripts]
llmswap = "llmswap.cli:main"

[project.urls]
Homepage = "https://github.com/sreenathmmenon/llmswap"
Documentation = "https://github.com/sreenathmmenon/llmswap#readme"
Repository = "https://github.com/sreenathmmenon/llmswap"
Issues = "https://github.com/sreenathmmenon/llmswap/issues"
Changelog = "https://github.com/sreenathmmenon/llmswap/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["llmswap"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]